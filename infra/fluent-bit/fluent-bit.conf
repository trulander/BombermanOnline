[SERVICE]
    Flush            5
    Log_Level        debug
    Daemon           off
    HTTP_Server      on
    HTTP_Listen      0.0.0.0
    HTTP_Port        2020
    Parsers_File     parsers.conf

# Forward вход для логов из Docker
[INPUT]
    Name        forward
    Host        0.0.0.0
    Port        24224
    Tag         docker

[FILTER]
    Name parser
    Match docker
    Key_Name log
    Parser json
    Reserve_Data On

#[FILTER]
#    Name              parser
#    Match             docker
#    Key_Name          log  # Поле, содержащее JSON-лог
#    Parser            json
#    Reserve_Data      On


# Отдельный выход для Docker-логов с метками из контейнера
[OUTPUT]
    Name loki
    Match docker
    Host loki
    Port 3100
    Labels job=docker
    Label_Keys $container_name
    Line_Format json
#    Label_Keys $container_name,$container_id

# HTTP вход для логов с фронтенда
[INPUT]
    Name        http
    Host        0.0.0.0
    Port        8888
    Tag         frontend

[Filter]
    Name    lua
    Match   frontend
    code    function cb_split(tag, timestamp, record) if record["logs"] ~= nil then return 2, timestamp, record["logs"] else return 2, timestamp, record end end
    call    cb_split

# Фильтр для разделения массива логов через Lua
#[FILTER]
#    Name        lua
#    Match       frontend
#    Script      split_logs.lua
#    Call        split_logs
#    Protected_Mode Off

# Фильтр для парсинга JSON-логов с фронтенда
[FILTER]
    Name parser
    Match frontend
    Key_Name log
    Parser frontend_json
    Reserve_Data On

# Отдельный выход для фронтенда с уникальными метками
[OUTPUT]
    Name loki
    Match frontend
    Host loki.internal
    Port 3100
    Labels job=web-frontend, component=frontend
    Line_Format json

